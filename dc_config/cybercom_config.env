# API SETTINGS
APPLICATION_TITLE=Cybercommons
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1

# Prefix for docker volume used with mongo
MONGO_DOCKER_VOLUME_PREFIX=cc

# If USE_LOCAL_MONGO is set to anything other than True, then remote database config will need to be set in secretes.env
USE_LOCAL_MONGO=True

# CELERY MONGO DB and Colection - Stores the task history and the tombstone result for all tasks.
MONGO_DB=cybercom
MONGO_TOMBSTONE_COLLECTION=tombstone
MONGO_LOG_COLLECTION=task_log

# Celery IMPORTS and SOURCE is a comma delimited string
# SOURCE must be a python package with setup.py configured with dependencies managed
CELERY_IMPORTS=cybercomq,emailq
CELERY_SOURCE=git+https://github.com/oulib-datacatalog/cybercomq@dev_shared_task,git+https://github.com/oulib-datacatalog/emailq@dev_celery5
CELERY_QUEUE=celery

# Celery and API LOG_LEVEL (DEBUG, INFO, WARNING, ERROR, or CRITICAL)
LOG_LEVEL=INFO
DJANGO_LOG_LEVEL=INFO

# Set resource constraints
API_CPUS=1.5

#### Change of variables below requires knowledge of Cybercom and Docker Compose Volumes #### 
RABBITMQ_SSL_CERT_FILE=/ssl/server/cert.pem
RABBITMQ_SSL_KEY_FILE=/ssl/server/key.pem
RABBITMQ_SSL_CA_FILE=/ssl/testca/cacert.pem
BROKER_USE_SSL=true
SSL_PATH=/ssl

#### NGINX 
NGINX_HOST=localhost
# values are default or letsencrypt, if not set uses default
NGINX_TEMPLATE=

#### Container Versions
NGINX_VERSION=1.23.2
MONGO_VERSION=6.0.2
RABBITMQ_VERSION=3.8.27
MEMCACHED_VERSION=1.6.17
API_VERSION=latest
DOCKER_PYTHON_VERSION=3.9-slim-bullseye
BASE_DOCKER_IMAGE=debian:bullseye-slim


